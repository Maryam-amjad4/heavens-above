name: Dependency Updates

# ------------------------------------------------------------
# PURPOSE:
# Automatically check and update outdated npm dependencies
# for the Heavens-Above project.
# - Runs every day at 3:55 PM PKT (10:55 AM UTC)
# - Uses npm audit and outdated check
# - Creates a changelog artifact and runs tests after update
# ------------------------------------------------------------

on:
  schedule:
    # Runs every day at 3:55 PM PKT (10:55 AM UTC)
    - cron: '55 10 * * *'

  workflow_dispatch:   # Allow manual trigger
    inputs:
      run_reason:
        description: 'Reason for triggering dependency update'
        required: false
        default: 'Manual trigger for dependency updates'

permissions:
  contents: write    # Required for committing updated files

jobs:
  update-dependencies:
    name: Automated Dependency Update
    runs-on: ubuntu-latest

    steps:
      # Step 1 — Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2 — Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # Step 3 — Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4 — Generate list of outdated dependencies
      - name: Check for outdated packages
        id: outdated
        run: |
          echo "=== Checking outdated dependencies ==="
          npm outdated || true
          npm outdated --json > outdated.json || true

      # Step 5 — Attempt safe dependency updates
      - name: Update dependencies safely
        run: |
          echo "=== Updating safe dependencies ==="
          npm update --save
          echo "=== Reinstalling after update ==="
          npm ci

      # Step 6 — Run lint and tests after update
      - name: Run Lint & Tests
        continue-on-error: true
        run: |
          echo "=== Running Lint ==="
          npm run lint || true
          echo "=== Running Tests ==="
          npm test || echo "Test step skipped (no test script)"

      # Step 7 — Generate update changelog file
      - name: Generate dependency changelog
        run: |
          echo "Dependency Update Log - $(date)" > update-log.txt
          echo "Commit SHA: $GITHUB_SHA" >> update-log.txt
          echo "Outdated packages checked and updated where safe." >> update-log.txt
          cat outdated.json >> update-log.txt || echo "No outdated.json found."

      # Step 8 — Upload changelog as artifact
      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: dependency-update-log
          path: update-log.txt

      # Step 9 — Commit and push updated lockfile if changes exist
      - name: Commit dependency updates
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package-lock.json package.json || true
          git diff-index --quiet HEAD || git commit -m "Auto-update dependencies [skip ci]"
          git push origin main || echo "No changes to push."

      # Step 10 — Add workflow summary
      - name: Add job summary
        if: always()
        run: |
          echo "### Dependency Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Scheduled: Every Monday 10:00 AM PKT (5:00 AM UTC)" >> $GITHUB_STEP_SUMMARY
          echo "- Outdated packages: checked and updated safely" >> $GITHUB_STEP_SUMMARY
          echo "- Changelog uploaded as artifact" >> $GITHUB_STEP_SUMMARY
