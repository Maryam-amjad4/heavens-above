name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create output directory
        run: mkdir -p .output

      - name: Run Linting
        id: lint
        continue-on-error: true
        run: npm run lint

      - name: Run Tests (Jest with junit reporter)
        id: test
        continue-on-error: true
        run: |
          mkdir -p test-results
          # Run tests; the jest-junit reporter will produce junit.xml by default
          npm test -- --reporters=default --reporters=jest-junit || true
          # Move junit.xml into test-results if it's in the repo root
          if [ -f junit.xml ]; then
            mv junit.xml test-results/junit.xml
          fi

      - name: Ensure junit exists (prevent artifact upload failure)
        if: always()
        run: |
          if [ ! -f test-results/junit.xml ]; then
            echo "No junit test result produced â€” creating placeholder so artifact upload won't fail."
            mkdir -p test-results
            cat > test-results/junit.xml <<'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="placeholder" tests="0" failures="0" skipped="0"/>
</testsuites>
EOF
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/junit.xml

      - name: Upload .output (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: heavens-above-build
          path: .output/

      - name: Generate Job Summary
        if: always()
        run: |
          echo "# CI Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.lint.outcome }}" = "success" ]; then
            echo "- [PASS] Linting passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- [FAIL] Linting failed" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ steps.test.outcome }}" = "success" ]; then
            echo "- [PASS] Tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- [FAIL] Tests failed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail the workflow if any check failed
        if: always()
        run: |
          if [ "${{ steps.lint.outcome }}" != "success" ] || [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "One or more checks failed. Failing job."
            exit 1
          fi
